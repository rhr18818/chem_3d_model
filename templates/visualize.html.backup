{% extends "base.html" %}

{% block title %}{{ molecule.name }} - Chemical Structure Visualizer{% endblock %}

{% block head %}
<style>
    body {
        background-color: #1a1a1a;
        color: #ffffff;
        margin: 0;
        padding: 0;
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    }
    
    .main-container {
        display: flex;
        height: 100vh;
        overflow: hidden;
    }
    
    .sidebar {
        width: 280px;
        background-color: #2a2a2a;
        padding: 20px;
        overflow-y: auto;
        border-right: 1px solid #404040;
    }
    
    .viewer-container {
        flex: 1;
        position: relative;
        background-color: #000000;
    }
    
    #viewer {
        width: 100%;
        height: 100vh;
        background-color: #000000;
        position: relative;
    }
    
    .sidebar h3 {
        color: #ffffff;
        font-size: 18px;
        margin-bottom: 15px;
        font-weight: 600;
    }
    
    .display-options {
        margin-bottom: 30px;
    }
    
    .display-option {
        background-color: #404040;
        border: none;
        color: #ffffff;
        padding: 8px 16px;
        margin: 5px 5px 5px 0;
        border-radius: 20px;
        cursor: pointer;
        font-size: 14px;
        transition: all 0.2s;
    }
    
    .display-option.active {
        background-color: #7c3aed;
    }
    
    .display-option:hover {
        background-color: #5a5a5a;
    }
    
    .display-option.active:hover {
        background-color: #8b5cf6;
    }
    
    .atom-legend {
        margin-bottom: 30px;
    }
    
    .legend-item {
        display: flex;
        align-items: center;
        margin-bottom: 8px;
        color: #cccccc;
    }
    
    .legend-color {
        width: 16px;
        height: 16px;
        border-radius: 50%;
        margin-right: 12px;
        border: 1px solid #555;
    }
    
    .properties-section {
        background-color: #333333;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 20px;
    }
    
    .property-item {
        margin-bottom: 10px;
        color: #cccccc;
    }
    
    .property-label {
        color: #888888;
        font-size: 12px;
        text-transform: uppercase;
        margin-bottom: 2px;
    }
    
    .property-value {
        color: #ffffff;
        font-weight: 500;
    }
    
    .search-box {
        background-color: #404040;
        border: 1px solid #555555;
        border-radius: 6px;
        padding: 8px 12px;
        color: #ffffff;
        width: 100%;
        margin-bottom: 20px;
        font-size: 14px;
    }
    
    .search-box::placeholder {
        color: #888888;
    }
    
    .search-box:focus {
        outline: none;
        border-color: #7c3aed;
    }
    
    .control-buttons {
        display: flex;
        gap: 10px;
        margin-bottom: 20px;
    }
    
    .control-btn {
        background-color: #404040;
        border: none;
        color: #ffffff;
        padding: 8px 12px;
        border-radius: 6px;
        cursor: pointer;
        font-size: 12px;
        transition: all 0.2s;
    }
    
    .control-btn:hover {
        background-color: #5a5a5a;
    }
    
    .navbar {
        display: none;
    }
    
    .container-fluid {
        padding: 0;
    }
    
    /* Responsive Design */
    @media (max-width: 768px) {
        .main-container {
            flex-direction: column;
        }
        
        .sidebar {
            width: 100%;
            height: auto;
            border-right: none;
            border-bottom: 1px solid #404040;
            padding: 15px;
        }
        
        .viewer-container {
            height: 60vh;
        }
        
        #viewer {
            height: 60vh;
        }
        
        .display-options {
            margin-bottom: 20px;
        }
        
        .properties-section {
            margin-bottom: 15px;
        }
    }
    
    @media (max-width: 480px) {
        .sidebar {
            padding: 10px;
        }
        
        .display-option {
            padding: 6px 12px;
            font-size: 12px;
        }
        
        .control-btn {
            padding: 6px 10px;
            font-size: 11px;
        }
        
        .property-item {
            margin-bottom: 8px;
        }
        
        .viewer-container {
            height: 50vh;
        }
        
        #viewer {
            height: 50vh;
        }
    }
</style>
{% endblock %}

{% block content %}
<div class="main-container">
    <!-- Left Sidebar -->
    <div class="sidebar">
        <!-- Search -->
        <input type="text" class="search-box" placeholder="Search molecule by name... Ctrl+K">
        
        <!-- Display Options -->
        <div class="display-options">
            <h3>Display Options</h3>
            <button class="display-option active" id="ball-stick">Ball-and-Stick</button>
            <button class="display-option" id="space-filling">Space-filling</button>
        </div>
        
        <!-- Control Buttons -->
        <div class="control-buttons">
            <button id="reset-view" class="control-btn">
                <i class="fas fa-sync-alt"></i> Reset
            </button>
            <button id="toggle-spin" class="control-btn">
                <i class="fas fa-play"></i> Spin
            </button>
        </div>
        
        <!-- Atom Legend -->
        <div class="atom-legend">
            <h3>Atom Legend</h3>
            <div class="legend-item">
                <div class="legend-color" style="background-color: #909090;"></div>
                <span>Carbon (C)</span>
            </div>
            <div class="legend-item">
                <div class="legend-color" style="background-color: #ffffff;"></div>
                <span>Hydrogen (H)</span>
            </div>
            <div class="legend-item">
                <div class="legend-color" style="background-color: #ff0d0d;"></div>
                <span>Oxygen (O)</span>
            </div>
            <div class="legend-item">
                <div class="legend-color" style="background-color: #3050f8;"></div>
                <span>Nitrogen (N)</span>
            </div>
        </div>
        
        <!-- Properties -->
        <div class="properties-section">
            <h3>Properties</h3>
            <div class="property-item">
                <div class="property-label">Formula</div>
                <div class="property-value">{{ molecule.formula }}</div>
            </div>
            <div class="property-item">
                <div class="property-label">Molar Mass</div>
                <div class="property-value">{{ molecule.molar_mass or 'N/A' }} g/mol</div>
            </div>
            <div class="property-item">
                <div class="property-label">Density</div>
                <div class="property-value">{{ molecule.density or 'N/A' }} g/cm³</div>
            </div>
            <div class="property-item">
                <div class="property-label">Melting Point</div>
                <div class="property-value">{{ molecule.melting_point or 'N/A' }}°C</div>
            </div>
            <div class="property-item">
                <div class="property-label">IUPAC Name</div>
                <div class="property-value">{{ molecule.name }}</div>
            </div>
        </div>
        
        <!-- Additional Controls -->
        <div class="control-buttons">
            <button id="save-molecule" class="control-btn">
                <i class="fas fa-save"></i> Save
            </button>
            <button id="download-image" class="control-btn">
                <i class="fas fa-download"></i> Download
            </button>
        </div>
    </div>
    
    <!-- Main Viewer -->
    <div class="viewer-container">
        <div id="viewer"></div>
        <div id="fallback-image" class="text-center p-4" style="display: none; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);">
            <img src="{{ fallback_image }}" class="img-fluid" alt="{{ molecule.name }}">
            <p class="mt-2 text-muted">3D visualization failed. Showing 2D representation.</p>
        </div>
    </div>
</div>
{% endblock %}

{% block scripts %}
<script>
    let viewer;
    let currentDisplayMode = 'ball-stick';
    
    // Wait for 3Dmol to be fully loaded
    function initializeViewer() {
        if (typeof $3Dmol === 'undefined') {
            console.log('3Dmol not loaded yet, retrying...');
            setTimeout(initializeViewer, 100);
            return;
        }
        
        console.log('Initializing 3Dmol viewer...');
        
        // Initialize 3Dmol viewer with black background
        viewer = $3Dmol.createViewer("viewer", {
            backgroundColor: 'black',
            antialias: true
        });
        
        // Show loading message
        viewer.addLabel("Loading molecule...", {
            position: {x:0, y:0, z:0},
            backgroundColor: 'rgba(124, 58, 237, 0.8)',
            fontColor: 'white',
            fontSize: 16
        });
        viewer.render();
        
        // Fetch molecule data
        fetch(`/api/molecule/{{ molecule.id }}/data`)
            .then(response => {
                console.log('Response status:', response.status);
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                console.log('Molecule data received:', data);
                
                // Clear the loading message
                viewer.clear();
                
                // Check if SDF data exists
                if (!data.sdf) {
                    throw new Error('No SDF data received');
                }
                
                // Add the molecule model
                viewer.addModel(data.sdf, "sdf");
                
                // Apply initial styling (ball-and-stick)
                applyDisplayMode(currentDisplayMode);
                
                // Zoom to fit and render
                viewer.zoomTo();
                viewer.render();
                
                // Start spinning automatically
                viewer.spin(true);
                document.getElementById('toggle-spin').innerHTML = '<i class="fas fa-pause"></i> Spin';
                    
                console.log('3D visualization loaded successfully');
            })
            .catch(error => {
                console.error('Error loading molecule data:', error);
                viewer.clear();
                viewer.addLabel(`Error: ${error.message}`, {
                    position: {x:0, y:0, z:0},
                    backgroundColor: 'rgba(220, 38, 38, 0.8)',
                    fontColor: 'white'
                });
                viewer.render();
                
                // Show fallback after a delay
                setTimeout(() => {
                    document.getElementById('viewer').style.display = 'none';
                    document.getElementById('fallback-image').style.display = 'block';
                }, 2000);
            });
        
        setupEventListeners();
    }
    
    // Apply different display modes
    function applyDisplayMode(mode) {
        if (!viewer) return;
        
        if (mode === 'ball-stick') {
            viewer.setStyle({}, {
                stick: {
                    radius: 0.15,
                    colorscheme: 'Jmol'
                },
                sphere: {
                    radius: 0.3,
                    colorscheme: 'Jmol'
                }
            });
        } else if (mode === 'space-filling') {
            viewer.setStyle({}, {
                sphere: {
                    radius: 1.0,
                    colorscheme: 'Jmol'
                }
            });
        }
        
        viewer.render();
    }
    
    // Setup all event listeners
    function setupEventListeners() {
        // Display mode buttons
        document.getElementById('ball-stick').addEventListener('click', function() {
            currentDisplayMode = 'ball-stick';
            document.querySelectorAll('.display-option').forEach(btn => btn.classList.remove('active'));
            this.classList.add('active');
            applyDisplayMode(currentDisplayMode);
        });
        
        document.getElementById('space-filling').addEventListener('click', function() {
            currentDisplayMode = 'space-filling';
            document.querySelectorAll('.display-option').forEach(btn => btn.classList.remove('active'));
            this.classList.add('active');
            applyDisplayMode(currentDisplayMode);
        });
        
        // Reset view button
        document.getElementById('reset-view').addEventListener('click', function() {
            if (viewer) {
                viewer.zoomTo();
                viewer.render();
            }
        });
        
        // Toggle spin button
        let isSpinning = true;
        document.getElementById('toggle-spin').addEventListener('click', function() {
            if (viewer) {
                isSpinning = !isSpinning;
                viewer.spin(isSpinning);
                this.innerHTML = isSpinning ? 
                    '<i class="fas fa-pause"></i> Spin' : 
                    '<i class="fas fa-play"></i> Spin';
            }
        });
        
        // Save molecule button
        document.getElementById('save-molecule').addEventListener('click', function() {
            // Create a modern notification
            const notification = document.createElement('div');
            notification.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                background-color: #10b981;
                color: white;
                padding: 12px 20px;
                border-radius: 8px;
                font-size: 14px;
                z-index: 9999;
                box-shadow: 0 4px 12px rgba(0,0,0,0.3);
            `;
            notification.textContent = 'Molecule saved successfully!';
            document.body.appendChild(notification);
            
            // Auto-dismiss after 3 seconds
            setTimeout(() => {
                notification.remove();
            }, 3000);
        });
        
        // Download image button
        document.getElementById('download-image').addEventListener('click', function() {
            if (viewer) {
                viewer.pngURI().then(function(pngURI) {
                    const link = document.createElement('a');
                    link.href = pngURI;
                    link.download = '{{ molecule.name }}.png';
                    link.click();
                });
            }
        });
        
        // Keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            if (e.ctrlKey && e.key === 'k') {
                e.preventDefault();
                document.querySelector('.search-box').focus();
            }
        });
    }
    
    // Initialize when DOM is ready
    document.addEventListener('DOMContentLoaded', function() {
        console.log('DOM loaded, initializing viewer...');
        initializeViewer();
    });
    
    // Add a timeout to check if 3D visualization loaded
    setTimeout(() => {
        const viewerContent = document.querySelector('#viewer canvas');
        if (!viewerContent) {
            console.warn('3D visualization failed to load after 10 seconds, showing fallback');
            // 3D visualization failed, show fallback
            const viewerElement = document.getElementById('viewer');
            const fallbackElement = document.getElementById('fallback-image');
            if (viewerElement && fallbackElement) {
                viewerElement.style.display = 'none';
                fallbackElement.style.display = 'block';
            }
        }
    }, 10000);
</script>

{% endblock %}